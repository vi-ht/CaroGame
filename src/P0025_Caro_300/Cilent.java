/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package P0025_Caro_300;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;


/**
 *
 * @author Thanh Vi
 */
public class Cilent extends javax.swing.JFrame implements Runnable{
      Socket mngSocket=null;
      int mngPort=0; int SizeMax = 0;int LastSize=0;
      String Name=""; String receiver=""; String name=null; String mngIP="";
      Vector<Socket> abc; Vector<String> listName = new Vector();
      DefaultListModel<String> model = new DefaultListModel<>();
      Thread t;
      BufferedWriter os=null; BufferedReader bf=null;
      int SelectedRow=0; int mypos = 0;
      int r=0; int [][] matrix ; JLabel[][] Box;
      boolean enable = true; boolean playing = false; boolean Xplayer = true;
      int Count=0;
      int MaxCount=0;
   
      public Cilent() {
            initComponents();
            jPanel18.setBackground(Color.yellow);
            this.setSize(412,193);  
      }

      /**
       * This method is called from within the constructor to initialize the
       * form. WARNING: Do NOT modify this code. The content of this method is
       * always regenerated by the Form Editor.
       */
      @SuppressWarnings("unchecked")
      // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
      private void initComponents() {

            jPanel2 = new javax.swing.JPanel();
            jLabel2 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            jLabel4 = new javax.swing.JLabel();
            jPanel1 = new javax.swing.JPanel();
            lbname = new javax.swing.JLabel();
            tfName = new javax.swing.JTextField();
            StartGame = new javax.swing.JButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            jList1 = new javax.swing.JList<>();
            Invite = new javax.swing.JButton();
            jLabel10 = new javax.swing.JLabel();
            tfSize = new javax.swing.JTextField();
            jPanel3 = new javax.swing.JPanel();
            jPanel4 = new javax.swing.JPanel();
            lbSend = new javax.swing.JLabel();
            jPanel7 = new javax.swing.JPanel();
            jLabel12 = new javax.swing.JLabel();
            jPanel6 = new javax.swing.JPanel();
            lbRei = new javax.swing.JLabel();
            jPanel8 = new javax.swing.JPanel();
            jLabel13 = new javax.swing.JLabel();
            Caro1 = new javax.swing.JPanel();
            Caro = new javax.swing.JPanel();
            jPanel18 = new javax.swing.JPanel();
            nofication = new javax.swing.JLabel();
            exit = new javax.swing.JButton();
            textSize = new javax.swing.JPanel();
            nofication1 = new javax.swing.JLabel();
            jPanel19 = new javax.swing.JPanel();
            jPanel21 = new javax.swing.JPanel();
            jLabel1 = new javax.swing.JLabel();
            jLabel5 = new javax.swing.JLabel();
            yesWin = new javax.swing.JButton();
            noWin = new javax.swing.JButton();
            jPanel20 = new javax.swing.JPanel();
            jPanel22 = new javax.swing.JPanel();
            jPanel23 = new javax.swing.JPanel();
            jLabel6 = new javax.swing.JLabel();
            jLabel7 = new javax.swing.JLabel();
            yesLose = new javax.swing.JButton();
            noLose = new javax.swing.JButton();
            jPanel24 = new javax.swing.JPanel();
            jPanel25 = new javax.swing.JPanel();
            jLabel8 = new javax.swing.JLabel();
            jLabel9 = new javax.swing.JLabel();
            YesOut = new javax.swing.JButton();
            noOut = new javax.swing.JButton();
            jPanel26 = new javax.swing.JPanel();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            getContentPane().setLayout(new java.awt.CardLayout());

            jPanel2.setBackground(new java.awt.Color(255, 204, 204));
            jPanel2.setPreferredSize(new java.awt.Dimension(413, 545));
            jPanel2.setRequestFocusEnabled(false);
            jPanel2.setVerifyInputWhenFocusTarget(false);

            jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
            jLabel2.setText("Caro");

            jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); // NOI18N
            jLabel3.setText("jLabel3");
            jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
                  public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jLabel3MouseClicked(evt);
                  }
            });

            jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); // NOI18N
            jLabel4.setText("jLabel3");
            jLabel4.setPreferredSize(new java.awt.Dimension(45, 45));

            jPanel1.setBackground(new java.awt.Color(255, 204, 204));
            jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

            lbname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbname.setText("Name:");

            tfName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

            StartGame.setBackground(new java.awt.Color(255, 153, 153));
            StartGame.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            StartGame.setText("Start game!");
            StartGame.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        StartGameActionPerformed(evt);
                  }
            });

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                  jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StartGame)
                        .addContainerGap(22, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                  jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(lbname)
                              .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE))
            );

            jList1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jList1.setSelectionBackground(new java.awt.Color(255, 153, 153));
            jList1.setSelectionForeground(new java.awt.Color(0, 0, 0));
            jScrollPane1.setViewportView(jList1);

            Invite.setBackground(new java.awt.Color(255, 153, 153));
            Invite.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            Invite.setText("Invite");
            Invite.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        InviteActionPerformed(evt);
                  }
            });

            jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel10.setText("Size:");

            tfSize.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            tfSize.setText("5");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                  jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                          .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addContainerGap())
                              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(93, 93, 93))
                              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfSize, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Invite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addContainerGap())))
            );
            jPanel2Layout.setVerticalGroup(
                  jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                              .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                              .addComponent(tfSize, javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(Invite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                              .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(104, Short.MAX_VALUE))
            );

            getContentPane().add(jPanel2, "Start");

            jPanel3.setBackground(new java.awt.Color(255, 255, 255));

            jPanel4.setBackground(new java.awt.Color(255, 102, 102));
            jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel4.setForeground(new java.awt.Color(255, 102, 102));
            jPanel4.setPreferredSize(new java.awt.Dimension(200, 77));

            lbSend.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbSend.setText("User1");

            jPanel7.setBackground(new java.awt.Color(255, 255, 255));
            jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel7.setPreferredSize(new java.awt.Dimension(90, 90));

            jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); // NOI18N
            jLabel12.setText("jLabel1");

            javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
            jPanel7.setLayout(jPanel7Layout);
            jPanel7Layout.setHorizontalGroup(
                  jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
            );
            jPanel7Layout.setVerticalGroup(
                  jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
            );

            javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
            jPanel4.setLayout(jPanel4Layout);
            jPanel4Layout.setHorizontalGroup(
                  jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
            );
            jPanel4Layout.setVerticalGroup(
                  jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                              .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addComponent(lbSend)))
                        .addGap(8, 8, 8))
            );

            jPanel6.setBackground(new java.awt.Color(51, 204, 255));
            jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel6.setPreferredSize(new java.awt.Dimension(200, 77));

            lbRei.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbRei.setText("User2");

            jPanel8.setBackground(new java.awt.Color(255, 255, 255));
            jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jPanel8.setPreferredSize(new java.awt.Dimension(90, 90));

            jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); // NOI18N
            jLabel13.setText("jLabel1");

            javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
            jPanel8.setLayout(jPanel8Layout);
            jPanel8Layout.setHorizontalGroup(
                  jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
            );
            jPanel8Layout.setVerticalGroup(
                  jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
            );

            javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
            jPanel6.setLayout(jPanel6Layout);
            jPanel6Layout.setHorizontalGroup(
                  jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbRei)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
            );
            jPanel6Layout.setVerticalGroup(
                  jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                        .addContainerGap())
                  .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbRei)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            Caro1.setBackground(new java.awt.Color(255, 204, 204));
            Caro1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            Caro1.setPreferredSize(new java.awt.Dimension(395, 395));

            Caro.setBackground(new java.awt.Color(255, 204, 204));
            Caro.setPreferredSize(new java.awt.Dimension(369, 369));

            javax.swing.GroupLayout CaroLayout = new javax.swing.GroupLayout(Caro);
            Caro.setLayout(CaroLayout);
            CaroLayout.setHorizontalGroup(
                  CaroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 0, Short.MAX_VALUE)
            );
            CaroLayout.setVerticalGroup(
                  CaroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 374, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout Caro1Layout = new javax.swing.GroupLayout(Caro1);
            Caro1.setLayout(Caro1Layout);
            Caro1Layout.setHorizontalGroup(
                  Caro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(Caro1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(Caro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
            );
            Caro1Layout.setVerticalGroup(
                  Caro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(Caro1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(Caro, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
            );

            jPanel18.setBackground(new java.awt.Color(255, 255, 255));
            jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jPanel18.setPreferredSize(new java.awt.Dimension(239, 50));

            nofication.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            nofication.setText("....");

            javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
            jPanel18.setLayout(jPanel18Layout);
            jPanel18Layout.setHorizontalGroup(
                  jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel18Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nofication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );
            jPanel18Layout.setVerticalGroup(
                  jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(nofication)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            exit.setBackground(new java.awt.Color(255, 255, 255));
            exit.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\cross.png")); // NOI18N
            exit.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        exitActionPerformed(evt);
                  }
            });

            textSize.setBackground(new java.awt.Color(51, 204, 0));
            textSize.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            textSize.setPreferredSize(new java.awt.Dimension(244, 50));

            nofication1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            nofication1.setText("nnxnn");

            javax.swing.GroupLayout textSizeLayout = new javax.swing.GroupLayout(textSize);
            textSize.setLayout(textSizeLayout);
            textSizeLayout.setHorizontalGroup(
                  textSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(textSizeLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(nofication1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );
            textSizeLayout.setVerticalGroup(
                  textSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(textSizeLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(nofication1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                  jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addComponent(Caro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                              .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(textSize, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
            );
            jPanel3Layout.setVerticalGroup(
                  jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(textSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                              .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addGap(9, 9, 9)
                        .addComponent(Caro1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addContainerGap())
            );

            getContentPane().add(jPanel3, "tictactoe");

            jPanel19.setBackground(new java.awt.Color(255, 102, 102));

            jPanel21.setBackground(new java.awt.Color(255, 255, 255));
            jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());

            jLabel1.setBackground(new java.awt.Color(255, 102, 102));
            jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
            jLabel1.setForeground(new java.awt.Color(255, 51, 51));
            jLabel1.setText("You Win!");

            jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel5.setText("Do you want to play again??");

            yesWin.setBackground(new java.awt.Color(255, 102, 102));
            yesWin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            yesWin.setText("Yes");
            yesWin.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        yesWinActionPerformed(evt);
                  }
            });

            noWin.setBackground(new java.awt.Color(255, 102, 102));
            noWin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            noWin.setText("No");
            noWin.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        noWinActionPerformed(evt);
                  }
            });

            javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
            jPanel21.setLayout(jPanel21Layout);
            jPanel21Layout.setHorizontalGroup(
                  jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(jPanel21Layout.createSequentialGroup()
                                    .addGap(46, 46, 46)
                                    .addComponent(yesWin)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(noWin))
                              .addComponent(jLabel5)
                              .addComponent(jLabel1))
                        .addContainerGap(85, Short.MAX_VALUE))
            );
            jPanel21Layout.setVerticalGroup(
                  jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(yesWin)
                              .addComponent(noWin))
                        .addContainerGap(246, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
            jPanel19.setLayout(jPanel19Layout);
            jPanel19Layout.setHorizontalGroup(
                  jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel19Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );
            jPanel19Layout.setVerticalGroup(
                  jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel19Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );

            getContentPane().add(jPanel19, "Win");

            jPanel22.setBackground(new java.awt.Color(0, 204, 204));

            jPanel23.setBackground(new java.awt.Color(255, 255, 255));
            jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());

            jLabel6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
            jLabel6.setForeground(new java.awt.Color(0, 153, 153));
            jLabel6.setText("You Lose!");

            jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel7.setText("Do you want to play again??");

            yesLose.setBackground(new java.awt.Color(0, 204, 204));
            yesLose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            yesLose.setText("Yes");
            yesLose.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        yesLoseActionPerformed(evt);
                  }
            });

            noLose.setBackground(new java.awt.Color(0, 204, 204));
            noLose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            noLose.setText("No");
            noLose.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        noLoseActionPerformed(evt);
                  }
            });

            javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
            jPanel23.setLayout(jPanel23Layout);
            jPanel23Layout.setHorizontalGroup(
                  jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(jPanel23Layout.createSequentialGroup()
                                    .addGap(46, 46, 46)
                                    .addComponent(yesLose)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(noLose))
                              .addComponent(jLabel7)
                              .addComponent(jLabel6))
                        .addContainerGap(69, Short.MAX_VALUE))
            );
            jPanel23Layout.setVerticalGroup(
                  jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(yesLose)
                              .addComponent(noLose))
                        .addContainerGap(158, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
            jPanel22.setLayout(jPanel22Layout);
            jPanel22Layout.setHorizontalGroup(
                  jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );
            jPanel22Layout.setVerticalGroup(
                  jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );

            javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
            jPanel20.setLayout(jPanel20Layout);
            jPanel20Layout.setHorizontalGroup(
                  jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 420, Short.MAX_VALUE)
                  .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel20Layout.createSequentialGroup()
                              .addGap(0, 0, Short.MAX_VALUE)
                              .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(0, 0, Short.MAX_VALUE)))
            );
            jPanel20Layout.setVerticalGroup(
                  jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 579, Short.MAX_VALUE)
                  .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel20Layout.createSequentialGroup()
                              .addGap(0, 44, Short.MAX_VALUE)
                              .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(0, 44, Short.MAX_VALUE)))
            );

            getContentPane().add(jPanel20, "Lose");

            jPanel24.setBackground(new java.awt.Color(255, 153, 204));

            jPanel25.setBackground(new java.awt.Color(255, 255, 255));
            jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());

            jLabel8.setBackground(new java.awt.Color(255, 51, 204));
            jLabel8.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
            jLabel8.setForeground(new java.awt.Color(255, 51, 153));
            jLabel8.setText("Out Of Move!");

            jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            jLabel9.setText("Do you want to play again??");

            YesOut.setBackground(new java.awt.Color(255, 102, 204));
            YesOut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            YesOut.setText("Yes");
            YesOut.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        YesOutActionPerformed(evt);
                  }
            });

            noOut.setBackground(new java.awt.Color(255, 102, 204));
            noOut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            noOut.setText("No");
            noOut.addActionListener(new java.awt.event.ActionListener() {
                  public void actionPerformed(java.awt.event.ActionEvent evt) {
                        noOutActionPerformed(evt);
                  }
            });

            javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
            jPanel25.setLayout(jPanel25Layout);
            jPanel25Layout.setHorizontalGroup(
                  jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(jPanel25Layout.createSequentialGroup()
                                    .addGap(74, 74, 74)
                                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                          .addGroup(jPanel25Layout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addComponent(YesOut)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(noOut))
                                          .addComponent(jLabel9)))
                              .addGroup(jPanel25Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel8)))
                        .addContainerGap(35, Short.MAX_VALUE))
            );
            jPanel25Layout.setVerticalGroup(
                  jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel25Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(YesOut)
                              .addComponent(noOut))
                        .addContainerGap(246, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
            jPanel24.setLayout(jPanel24Layout);
            jPanel24Layout.setHorizontalGroup(
                  jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel24Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
            );
            jPanel24Layout.setVerticalGroup(
                  jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(jPanel24Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );

            getContentPane().add(jPanel24, "outofmove");

            javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
            jPanel26.setLayout(jPanel26Layout);
            jPanel26Layout.setHorizontalGroup(
                  jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 420, Short.MAX_VALUE)
            );
            jPanel26Layout.setVerticalGroup(
                  jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 579, Short.MAX_VALUE)
            );

            getContentPane().add(jPanel26, "card7");

            pack();
      }// </editor-fold>//GEN-END:initComponents

      public void matrix(int k){
            for (int i = 0; i < k; i++) {
                  for (int j = 0; j < k; j++) {
                        matrix[i][j]=0;
                  }
            }
      }
      public void box(int k,int value){
            for (int i = 0; i < k; i++) {
                  for (int j = 0; j < k; j++) {
                        create(i,j,value);
                        ClickBox(i,j,value);
                  }
            }
      }
      public void create(int m, int n,int value){
            Box[m][n]=new JLabel();
             switch(value){
                     case 60: 
                          Box[m][n].setPreferredSize(new Dimension(60, 60));
                          break;
                     case 45: 
                          Box[m][n].setPreferredSize(new Dimension(45, 45));
                          break;
                     case 25: 
                          Box[m][n].setPreferredSize(new Dimension(36, 36)); 
                          break;
             }
            Box[m][n].setBackground(new java.awt.Color(255, 255, 255));
            Box[m][n].setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            Caro.add(Box[m][n]);
      }
      public void Remove(int k){
             for (int i = 0; i < k; i++) {
                  for (int j = 0; j < k; j++) {
                        Caro.remove(Box[i][j]);
                  }
            }
      }
     
      private void ClickBox(int m, int n,int value){  
            Box[m][n].addMouseListener(new java.awt.event.MouseAdapter() {
                  @Override
                  public void mouseClicked(java.awt.event.MouseEvent evt) {
                        if (checkValidPos(m, n) && enable == true) {
                              String strM = m+""; String strN = n+""; 
                              if(strM.length()==1){strM = "0"+m;}
                              if(strN.length()==1){strN = "0"+n;}
                              Count++;
                              if (Xplayer) {
                                    Box[m][n].setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x"+value+".png"));
                                    matrix[m][n] = 1;
                                    sendtoServer("=" + SelectedRow + strM + strN + "x"+value+Count);
                              } else {
                                    Box[m][n].setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o"+value+".png"));
                                    matrix[m][n] = 2;
                                    sendtoServer("=" + SelectedRow + strM + strN + "o"+value+Count);
                              }
                              nofication.setText("Not your turn!");
                              sendtoServer("(" + SelectedRow);
                              enable=false;
                              checkWin(m, n,SizeMax);
                        } else {
                              nofication.setText("You can't check in this box");
                        }
                  }
            });
      }

      public void Sizenxn(int r){
            int SizeN = 432+(r-5)*70; int SizeD = 610+(r-5)*70;
            int SizeNCaro = 364+(r-5)*70; int SizeDCaro = 364+(r-5)*70;
            int SizeNCaro1 = 389+(r-5)*70; int SizeDCaro1 = 389+(r-5)*70;
            this.setSize(SizeN,SizeD);
            nofication1.setText(r+"x"+r);
            Caro.setLayout(new GridLayout(r, r,10,10));
            Caro.setPreferredSize(new Dimension(SizeNCaro,SizeDCaro));
            Caro1.setPreferredSize(new Dimension(SizeNCaro1,SizeDCaro1));
         
      }
      
      public void Sizenxn45(int r){
            int SizeN = 432+(r-5)*50; int SizeD = 610+(r-5)*50;
            int SizeNCaro = 364+(r-5)*50; int SizeDCaro = 364+(r-5)*50;
            int SizeNCaro1 = 389+(r-5)*50; int SizeDCaro1 = 389+(r-5)*50;
            this.setSize(SizeN,SizeD);
            nofication1.setText(r+"x"+r);
            Caro.setLayout(new GridLayout(r,r,5,5));
            Caro.setPreferredSize(new Dimension(SizeNCaro,SizeDCaro));
            Caro1.setPreferredSize(new Dimension(SizeNCaro1,SizeDCaro1));
      }
      
       public void Sizenxn25(int r){
            int SizeN = 432+30+(r-9)*39; int SizeD = 610+30+(r-9)*39;
            int SizeNCaro = 364+30+(r-9)*39; int SizeDCaro = 364+30+(r-9)*39;
            int SizeNCaro1 = 389+30+(r-9)*39; int SizeDCaro1 = 389+30+(r-9)*39;
            this.setSize(SizeN,SizeD);
            nofication1.setText(r+"x"+r);
            Caro.setLayout(new GridLayout(r,r,3,3));
            Caro.setPreferredSize(new Dimension(SizeNCaro,SizeDCaro));
            Caro1.setPreferredSize(new Dimension(SizeNCaro1,SizeDCaro1));
      }

      public void resetgame(int size){
            for (int i = 0; i < size; i++) {
                  for (int j = 0; j < size; j++) {
                        matrix[i][j]=0;
                  }
            }
            Remove(size);
            this.setSize(412,535);
}
      
      private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
            mngIP = "localhost";//get server and server port
            mngPort = 8888;
            Name=this.tfName.getText();
            if (Name.length()<=0) {
                  JOptionPane.showMessageDialog(this,"Please enter your name!");
                  lbname.requestFocus();
                  return;
            }
            try {
                  mngSocket=new Socket(mngIP,mngPort); //connect to server
                  if(mngSocket!=null){
                        this.setSize(412,535);
                        Server sv = new Server();
                        t = new Thread(this);
                        t.start();
                        bf=new BufferedReader(new InputStreamReader(mngSocket.getInputStream()));
                        os=new BufferedWriter(new OutputStreamWriter(mngSocket.getOutputStream()));
                        os.write("User: " + Name);
                        os.newLine();
                        os.flush();
                  }
            } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, "Manager is not running.");
                  System.exit(0);
            }
            StartGame.setEnabled(false);
      }//GEN-LAST:event_StartGameActionPerformed

      private void InviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InviteActionPerformed
            
            SelectedRow = jList1.getSelectedIndex();
            for (int i = 0; i <model.size(); i++) {
                  if(model.get(i).contains("(Me)")){
                        mypos = i;
                        break;
                  }
                  }
            if(SelectedRow<0){
                  JOptionPane.showMessageDialog(this, "Please choose friend to play!");
                  LastSize = 0;
                  return;
            }
             LastSize = SizeMax;
            if(!tfSize.getText().matches("\\d+"))
            {
                  JOptionPane.showMessageDialog(this, "Invalid Size!");
                  tfSize.requestFocus();
                  this.tfSize.setText("");
                  LastSize = 0;
                  return;
            }
            SizeMax = Integer.parseInt(this.tfSize.getText());
            if (SizeMax > 19 || SizeMax < 5) {
                  LastSize = 0;
                  JOptionPane.showMessageDialog(this, "Size must be <= 19 & >=5!");
                  tfSize.setText("");
                  tfSize.requestFocus();
                  return;
            }
            if(SelectedRow==mypos){
                  JOptionPane.showMessageDialog(this, "You can not play this game with yourself!");
                  LastSize = 0;
            }else{
                 
                  int r = JOptionPane.showConfirmDialog(this, "Do you want to play game with '"+ model.get(SelectedRow).substring(2).toString()+ "'' ?", "Invite?", JOptionPane.YES_NO_OPTION);
                             if(r==JOptionPane.YES_OPTION){ 
                                   String a = "@"+SelectedRow+mypos+Name;
                                   sendtoServer(a);
                                  
                        }
            }    
      }//GEN-LAST:event_InviteActionPerformed

      
      private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

      }//GEN-LAST:event_jLabel3MouseClicked

      private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
            int r= JOptionPane.showConfirmDialog(this, "Do you want to leave and lose the game???" , "Exit?", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.YES_OPTION) {
            CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
            this.setSize(412,535);
            CLT.show(this.getContentPane(),"Start");
            playing=false;
            sendtoServer("x"+SelectedRow+Name);
            }
      }//GEN-LAST:event_exitActionPerformed

      public boolean checkValidPos(int m,int n){
            boolean valid = true;
            if (matrix[m][n]==0) {
                  valid = true;
            }else{
                  valid = false;
            }
            return valid; 
      }
      
      public void checkWin(int m,int n,int size){
            String value = "",checkBlock="";
            boolean full = false,flag = true;
                  if (Count==size*size) {
                              full = true;
                   }
                  if (Xplayer) {
                        value = "11111"; checkBlock="2";
                  } else {
                        value = "22222";checkBlock="1";
                  }
                  String strM = "";
                  String strN = "";
                  int mC=m; int nC=n;
                  String strCross1=""; String strCross2="";
                  for (int i = 0; i < size; i++) {strM+=matrix[m][i];}
                  for (int j = 0; j < size; j++) {strN+=matrix[j][n];}
                  while(mC!=-1 && nC!=-1){mC--; nC--;}
                  mC++; nC++;
                  while(mC!=size && nC!=size){
                        strCross1+=matrix[mC][nC];
                        mC++; nC++;
                  }
                  System.out.println("mC:"+mC+"nC:"+nC);
                  mC=m; nC=n;
                  while(mC!=-1 && nC!=size){mC--; nC++;}
                  mC++; nC--;
                  System.out.println("mC:"+mC+"nC:"+nC);
                  int a=nC,b=mC;
                  System.out.println("a:"+a+"b:"+b);
                  while(mC!=a && nC!=b){
                        
                        strCross2+=matrix[mC][nC];
                        mC++; nC--;}
                  System.out.println("mC:"+mC+"nC:"+nC);
                  System.out.println("strM: "+strM);
                   System.out.println("strN: "+strN);
                   System.out.println("strCross1: "+strCross1);
                   System.out.println("strCross2: "+strCross2);
                   String result="";
                  if(strM.contains(value)){
                         flag=CheckBlocking(strM, value, checkBlock, flag);
                         if(flag==false) {return;}
                  }else if(strN.contains(value)){
                         flag=CheckBlocking(strN, value, checkBlock, flag);
                         if(flag==false) {return;}
                  }else if(strCross1.contains(value)){
                         flag=CheckBlocking(strCross1, value, checkBlock, flag);
                         if(flag==false) {return;}
                  }else if(strCross2.contains(value)){
                         flag=CheckBlocking(strCross2, value, checkBlock, flag);
                         if(flag==false) {return;}
                  }
                  if(full==true && flag ==true){
                        CardLayout CLT = (CardLayout) this.getContentPane().getLayout();
                        CLT.show(this.getContentPane(), "outofmove");
                        resetgame(SizeMax);
                        sendtoServer("o" + SelectedRow);
                  }
      }

      public boolean CheckBlocking(String str,String value,String checkBlock,boolean win){
            int pos = str.indexOf(value);
            System.out.println("pos:"+pos);
            String cutStr1 = str.substring(0,pos);
            System.out.println("cutStr1: "+cutStr1);
            String cutStr2 = str.substring(pos);
            System.out.println("cutStr2: "+cutStr2);
            if(cutStr1.contains(checkBlock)&&cutStr2.contains(checkBlock)){ 
                  win = true;
            }else{
                  CardLayout CLT = (CardLayout) this.getContentPane().getLayout();
                  CLT.show(this.getContentPane(), "Win");
                  resetgame(SizeMax);
                  sendtoServer("-" + SelectedRow);
                  sendtoServer("." + SelectedRow + mypos);
                  win = false;
            }
            return win;
      }
      
      private void noWinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noWinActionPerformed
            no();
      }//GEN-LAST:event_noWinActionPerformed

      public  void no(){
            int r= JOptionPane.showConfirmDialog(this, "Do you want to leave the game???" , "Exit?", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.YES_OPTION) {
            CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
            CLT.show(this.getContentPane(),"Start");
            playing=false;
            sendtoServer("x"+SelectedRow+Name);
            this.setSize(412,535);
            }
      }
      
      private void noLoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noLoseActionPerformed
            no();
      }//GEN-LAST:event_noLoseActionPerformed

      private void noOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOutActionPerformed
            no();
      }//GEN-LAST:event_noOutActionPerformed

      private void yesWinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesWinActionPerformed
           Yes();
      }//GEN-LAST:event_yesWinActionPerformed

      private void yesLoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesLoseActionPerformed
            Yes();
      }//GEN-LAST:event_yesLoseActionPerformed

      private void YesOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesOutActionPerformed
            Yes();
      }//GEN-LAST:event_YesOutActionPerformed

      public void Yes(){
            int r = JOptionPane.showConfirmDialog(this, "Do you want to play game again?", "Invite?", JOptionPane.YES_NO_OPTION);
            if(r==JOptionPane.YES_OPTION){ 
                       String a = "y"+SelectedRow+mypos;
                        sendtoServer(a);
            }
      }

      public void sendtoServer(String stt){
            try {
                  os.write(stt);
                  os.newLine();
                  os.flush();
            } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, e);
            }
       }

          @Override
            public void run(){
                  while(true)
                        try {
                              if(mngSocket!=null){
                                    String msg="";
                                    if((msg=bf.readLine())!= null && msg.length()>0){   
                                          System.out.println(msg);
                                          switch(msg.charAt(0)){
                                                case '*': 
                                                      check1(msg);
                                                      break;
                                                case '>':
                                                      Invited(msg);
                                                      break;
                                                case '!':
                                                      JOptionPane.showMessageDialog(this,msg.substring(1).toUpperCase()+" deny your request!");
                                                      CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
                                                      this.setSize(412,535);
                                                      CLT.show(this.getContentPane(),"Start");
                                                      playing=false;
                                                      break;
                                                case '#':
                                                      Remove(LastSize);
                                                      lbSend.setText((Name+"(ME)").toUpperCase());
                                                      lbRei.setText(receiver.toUpperCase());
                                                      CLT=(CardLayout)this.getContentPane().getLayout();
                                                      CLT.show(this.getContentPane(),"tictactoe");
                                                      SetSize(SizeMax);
                                                      MaxCount=SizeMax*SizeMax;
                                                      playing=true;
                                                      Xplayer = true;
                                                      enable = true;
                                                      jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); 
                                                      jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); 
                                                      jPanel6.setBackground(new java.awt.Color(51, 204, 255));
                                                      jPanel4.setBackground(new java.awt.Color(255, 102, 102));
                                                      nofication.setText("Your turn!");
                                                      sendtoServer(")"+SelectedRow);
                                                      break;
                                                  
                                                case 'x':
                                                      JOptionPane.showMessageDialog(this,msg.substring(2).toUpperCase()+" has left the game!");
                                                      CLT=(CardLayout)this.getContentPane().getLayout();
                                                      this.setSize(412,535);
                                                      CLT.show(this.getContentPane(),"Start");
                                                      playing=false;
                                                      break;
                                                case '&':
                                                      model.removeElementAt(Integer.parseInt(msg.substring(1)));
                                                      jList1.setModel(model);
                                                      break;
                                                case '=':
                                                      int m = Integer.parseInt(msg.substring(2, 4));
                                                      int n = Integer.parseInt(msg.substring(4, 6));
                                                      String xo = msg.substring(6, 7);
                                                      int value = Integer.parseInt(msg.substring(7,9));
                                                      Count= Integer.parseInt(msg.substring(9));
                                                      System.out.println("cilent:"+ Name+xo);
                                                      Display(xo, m, n,value);
                                                      break;
                                                 case '-':
                                                       CLT=(CardLayout)this.getContentPane().getLayout();
                                                       CLT.show(this.getContentPane(),"Lose");
                                                       this.setSize(412,535);
                                                       resetgame(SizeMax);
                                                      break;
                                                  case ')':
                                                      nofication.setText("Not your turn!");
                                                      enable=false;
                                                      break;
                                                 case '(':
                                                      nofication.setText("Your turn!");
                                                      enable=true;
                                                      break;
                                                 case 'o':
                                                      CLT=(CardLayout)this.getContentPane().getLayout();
                                                      this.setSize(412,535);
                                                       CLT.show(this.getContentPane(),"outofmove");
                                                       resetgame(SizeMax);
                                                      break;
                                                 case 'y': 
                                                       if(msg.substring(1,2).equals("y")){
                                                             if (Xplayer) {
                                                                   O(msg);
                                                             } else {
                                                                   X(msg);
                                                             }
                                                       }else{
                                                             int r= JOptionPane.showConfirmDialog(this, "Do you want to play game again?", "Invite?", JOptionPane.YES_NO_OPTION);
                                                             if (r == JOptionPane.YES_OPTION) {
                                                                   if (Xplayer) {
                                                                         O(msg);
                                                                   } else {
                                                                         X(msg);
                                                                   }
                                                             }else{
                                                                   CLT=(CardLayout)this.getContentPane().getLayout();
                                                                  CLT.show(this.getContentPane(),"Start");
                                                                  playing=false;
                                                                   sendtoServer("!"+SelectedRow+Name);
                                                             }     
                                                       }
                                                      break;
                                                case '@': 
                                                       if (playing) {
                                                             sendtoServer("~y"+msg.substring(2,3)+Name);
                                                      }else{
                                                             sendtoServer("~n"+msg.substring(2,3)+Name);
                                                       }
                                                      break; 
                                                 case '~':
                                                      if(msg.substring(1,2).equals("y")){
                                                            JOptionPane.showMessageDialog(this,msg.substring(3).toUpperCase()+" is playing game!");
                                                      }else{
                                                            
                                                            String StrSizeMax = SizeMax+"";
                                                            if(StrSizeMax.length()==1){
                                                                  StrSizeMax = "0"+StrSizeMax;
                                                            }
                                                            String a = ">"+SelectedRow+mypos+StrSizeMax+Name;
                                                            receiver = model.get(SelectedRow).substring(1);
                                                            sendtoServer(a);
                                                      }
                                                      break; 
                                    }
                              }
                              }
                        } catch (Exception e) {
                              e.getMessage();
                        }
            }
   //----------------------------------------------------------------------------------------------------------------------------         
            public void check1(String msg){
            int kt =0;
                for (int i = 0; i < model.size(); i++) {
                      if (!(model.get(i).equals(msg)) && !(model.get(i).equals(msg + " (Me)"))) {
                            kt = 0;
                      } else {
                            kt = 1;
                            break;
                      }
                }
                if (msg.substring(2).equals(Name)) {
                      msg = msg + " (Me)";
                      System.out.println(msg);
                }
                if (kt == 0) {
                      model.addElement(msg);
                      jList1.setModel(model);
                  }
                return;
}
//---------------------------------------------------------------------------------------------------------------------------------
            public void Invited(String mess){
                 receiver = mess.substring(5);
                 int r= JOptionPane.showConfirmDialog(this, "Do you want to play game with '" + mess.substring(5) + "' ?", "Invite?", JOptionPane.YES_NO_OPTION);
                 if (r == JOptionPane.YES_OPTION) {
                              Remove(SizeMax);
                              SizeMax = Integer.parseInt(mess.substring(3, 5));
                              MaxCount=SizeMax*SizeMax;
                              System.out.println("SizeMax: "+SizeMax);
                              SetSize(SizeMax);
                              sendtoServer("#"+mess.substring(2,3)+Name);
                              SelectedRow=Integer.parseInt(mess.substring(2, 3));
                              mypos=Integer.parseInt(mess.substring(1, 2));
                              lbSend.setText((Name+"(ME)").toUpperCase());
                              lbRei.setText(receiver.toUpperCase());
                              CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
                              CLT.show(this.getContentPane(),"tictactoe");
                              playing=true;
                              Xplayer=false;
                              jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); 
                              jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); 
                              jPanel4.setBackground(new java.awt.Color(51, 204, 255));
                              jPanel6.setBackground(new java.awt.Color(255, 102, 102));
                              enable = false;
                              nofication.setText("Not your turn!");
                 }else{
                              CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
                              CLT.show(this.getContentPane(),"Start");
                              sendtoServer("!"+mess.substring(2,3)+Name);
                              playing=false;
                 }
            }
//---------------------------------------------------------------------------------------------------------------------------------
            public void O(String mess){
                  System.out.println("OOOOOO");
                              Count=0;
                              resetgame(SizeMax);
                              SetSize(SizeMax);
                              CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
                              CLT.show(this.getContentPane(),"tictactoe");
                              Xplayer=false;
                              jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); 
                              jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); 
                              jPanel4.setBackground(new java.awt.Color(51, 204, 255));
                              jPanel6.setBackground(new java.awt.Color(255, 102, 102));
                              enable = false;
                              nofication.setText("Not your turn!");
            }
//---------------------------------------------------------------------------------------------------------------------------------
            public void X(String mess){
                              Count=0;
                              resetgame(SizeMax);
                              SetSize(SizeMax);
                              CardLayout CLT=(CardLayout)this.getContentPane().getLayout();
                              CLT.show(this.getContentPane(),"tictactoe");
                              Xplayer=true;
                              jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x455.png")); 
                              jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o455.png")); 
                              jPanel6.setBackground(new java.awt.Color(51, 204, 255));
                              jPanel4.setBackground(new java.awt.Color(255, 102, 102));
                              enable = true;
                              nofication.setText("Your turn!");
            }
//------------------------------------------------------------------------------------------------------------
            public void Display(String xo,int m, int n,int value){
                  if (xo.equals("x")) {
                                     Box[m][n].setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\x"+value+".png"));
                                     matrix[m][n] = 1;
                               } else {
                                     Box[m][n].setIcon(new javax.swing.ImageIcon("C:\\Java\\TICTACTOE\\Image\\o"+value+".png"));
                                     matrix[m][n] = 2;
                               }
            }

//----------------------------------------------------------------------------------------------------------------------------------------------------    
           public void SetSize(int size){
                 matrix = new int[size][size];
                 Box = new JLabel[size][size];
                 matrix(size);
                 if(size<9){
                       box(size,60);
                       Sizenxn(size);
                 }else if(size>8 && size<14){
                        box(size,45);
                        Sizenxn45(size);
                 }else{
                       box(size,25);
                        Sizenxn25(size);
                 }
           }
//----------------------------------------------------------------------------------------------------------------------------------------------------

      /**
       * @param args the command line arguments
       */
      public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
             */
            try {
                  for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                        if ("Nimbus".equals(info.getName())) {
                              javax.swing.UIManager.setLookAndFeel(info.getClassName());
                              break;
                        }
                  }
            } catch (ClassNotFoundException ex) {
                  java.util.logging.Logger.getLogger(Cilent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                  java.util.logging.Logger.getLogger(Cilent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                  java.util.logging.Logger.getLogger(Cilent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                  java.util.logging.Logger.getLogger(Cilent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                  public void run() {
                        new Cilent().setVisible(true);
                  }
            });
      }

      // Variables declaration - do not modify//GEN-BEGIN:variables
      private javax.swing.JPanel Caro;
      private javax.swing.JPanel Caro1;
      private javax.swing.JButton Invite;
      private javax.swing.JButton StartGame;
      private javax.swing.JButton YesOut;
      private javax.swing.JButton exit;
      private javax.swing.JLabel jLabel1;
      private javax.swing.JLabel jLabel10;
      private javax.swing.JLabel jLabel12;
      private javax.swing.JLabel jLabel13;
      private javax.swing.JLabel jLabel2;
      private javax.swing.JLabel jLabel3;
      private javax.swing.JLabel jLabel4;
      private javax.swing.JLabel jLabel5;
      private javax.swing.JLabel jLabel6;
      private javax.swing.JLabel jLabel7;
      private javax.swing.JLabel jLabel8;
      private javax.swing.JLabel jLabel9;
      private javax.swing.JList<String> jList1;
      private javax.swing.JPanel jPanel1;
      private javax.swing.JPanel jPanel18;
      private javax.swing.JPanel jPanel19;
      private javax.swing.JPanel jPanel2;
      private javax.swing.JPanel jPanel20;
      private javax.swing.JPanel jPanel21;
      private javax.swing.JPanel jPanel22;
      private javax.swing.JPanel jPanel23;
      private javax.swing.JPanel jPanel24;
      private javax.swing.JPanel jPanel25;
      private javax.swing.JPanel jPanel26;
      private javax.swing.JPanel jPanel3;
      private javax.swing.JPanel jPanel4;
      private javax.swing.JPanel jPanel6;
      private javax.swing.JPanel jPanel7;
      private javax.swing.JPanel jPanel8;
      private javax.swing.JScrollPane jScrollPane1;
      private javax.swing.JLabel lbRei;
      private javax.swing.JLabel lbSend;
      private javax.swing.JLabel lbname;
      private javax.swing.JButton noLose;
      private javax.swing.JButton noOut;
      private javax.swing.JButton noWin;
      private javax.swing.JLabel nofication;
      private javax.swing.JLabel nofication1;
      private javax.swing.JPanel textSize;
      private javax.swing.JTextField tfName;
      private javax.swing.JTextField tfSize;
      private javax.swing.JButton yesLose;
      private javax.swing.JButton yesWin;
      // End of variables declaration//GEN-END:variables
}
